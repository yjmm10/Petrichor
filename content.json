{"meta":{"title":"Petrichor","subtitle":null,"description":null,"author":"Petrichor","url":"http://yoursite.com","root":"/"},"pages":[{"title":"categories","date":"2019-10-29T01:14:21.000Z","updated":"2019-10-29T01:17:46.667Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2019-10-29T01:14:07.000Z","updated":"2019-10-29T01:15:30.904Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"vs路径宏","slug":"vs路径宏","date":"2019-10-29T03:37:22.088Z","updated":"2019-10-29T03:37:22.088Z","comments":true,"path":"2019/10/29/vs路径宏/","link":"","permalink":"http://yoursite.com/2019/10/29/vs%E8%B7%AF%E5%BE%84%E5%AE%8F/","excerpt":"","text":"$(RemoteMachine)设置为“调试”属性页上“远程计算机”属性的值。有关更多信息，请参见更改用于 C/C++ 调试配置的项目设置。 $(References)以分号分隔的引用列表被添加到项目中。 $(ConfigurationName)当前项目配置的名称（例如“Debug”）。 $(PlatformName)当前项目平台的名称（例如“Win32”）。 $(Inherit)指定在由项目生成系统所撰写的命令行中，继承的属性出现的顺序。默认情况下，继承的属性出现在当前属性的末尾。 $(NoInherit)使任何将被继承的属性不被继承。若还要避免同级级别的计算，请使用 $(StopEvaluating)。使用 $(NoInherit)会导致对于同一属性忽略任何出现的 $(Inherit)。 $(StopEvaluating)立即停止计算链中宏的计算。出现在$(StopEvaluating) 之后的任何值将不出现在宏的计算值中。如果$(StopEvaluating) 在 $(Inherit) 之前，计算链中当前位置的继承值将不会连接到宏值。$(StopEvaluating)是$(NoInherit)的功能超集。 $(ParentName)包含此项目项的项的名称。该名称将是父文件夹名称或项目名称。 $(RootNameSpace)包含应用程序的命名空间（如果有）。 $(IntDir)为中间文件指定的相对于项目目录的目录路径。它解析为“中间目录”属性的值。 $(OutDir)输出文件目录的路径，相对于项目目录。这解析为“输出目录”属性的值。 $(DevEnvDir)Visual Studio .NET 的安装目录（定义形式：驱动器 + 路径）；包括尾部的反斜杠“\\”。 $(InputDir)输入文件的目录（定义形式：驱动器 + 路径）；包括尾部的反斜杠“\\”。如果该项目是输入，则此宏等效于 $(ProjectDir)。 $(InputPath)输入文件的绝对路径名（定义形式：驱动器 + 路径 + 基本名称 + 文件扩展名）。如果该项目是输入，则此宏等效于 $(ProjectPath)。 $(InputName)输入文件的基本名称。如果该项目是输入，则此宏等效于 $(ProjectName)。 $(InputFileName)输入文件的文件名（定义为基本名称 + 文件扩展名）。如果该项目是输入，则此宏等效于 $(ProjectFileName)。 $(InputExt)输入文件的文件扩展名。它在文件扩展名的前面包括“.”。如果该项目是输入，则此宏等效于 $(ProjectExt)。 $(ProjectDir)项目的目录（定义形式：驱动器 + 路径）；包括尾部的反斜杠“\\”。 $(ProjectPath)项目的绝对路径名（定义形式：驱动器 + 路径 + 基本名称 + 文件扩展名）。 $(ProjectName)项目的基本名称。 $(ProjectFileName)项目的文件名（定义为基本名称 + 文件扩展名）。 $(ProjectExt)项目的文件扩展名。它在文件扩展名的前面包括“.”。 $(SolutionDir)解决方案的目录（定义形式：驱动器 + 路径）；包括尾部的反斜杠“\\”。 $(SolutionPath)解决方案的绝对路径名（定义形式：驱动器 + 路径 + 基本名称 + 文件扩展名）。 $(SolutionName)解决方案的基本名称。 $(SolutionFileName)解决方案的文件名（定义为基本名称 + 文件扩展名）。 $(SolutionExt)解决方案的文件扩展名。它在文件扩展名的前面包括“.”。 $(TargetDir)生成的主输出文件的目录（定义形式：驱动器 + 路径）；包括尾部的反斜杠“\\”。 $(TargetPath)生成的主输出文件的绝对路径名（定义形式：驱动器 + 路径 + 基本名称 + 文件扩展名）。 $(TargetName)生成的主输出文件的基本名称。 $(TargetFileName)生成的主输出文件的文件名（定义为基本名称 + 文件扩展名）。 $(TargetExt)生成的主输出文件的文件扩展名。它在文件扩展名的前面包括“.”。 $(VSInstallDir)安装 Visual Studio .NET 的目录。 $(VCInstallDir)安装 Visual C++ .NET 的目录。 $(FrameworkDir)安装 .NET Framework 的目录。 $(FrameworkVersion)Visual Studio 使用的 .NET Framework 版本。与 $(FrameworkDir) 相结合，就是 Visual Studio 使用的 .NET Framework 版本的完整路径。 $(FrameworkSDKDir)安装 .NET Framework SDK 的目录。.NET Framework SDK 可作为 Visual Studio .NET 的一部分安装，也可单独安装。 $(WebDeployPath)从 Web 部署根到项目输出所属于的位置的相对路径。返回与 RelativePath 相同的值。 $(WebDeployRoot)指向 位置的绝对路径。例如，c:\\inetpub\\wwwroot。 $(SafeParentName)有效名称格式的直接父级的名称。例如，窗体是 .resx 文件的父级。 $(SafeInputName)作为有效类名的文件的名称，但不包括文件扩展名。 $(SafeRootNamespace)项目向导将在其中添加代码的命名空间名称。此命名空间名称将只包含在有效的 C++ 标识符中允许的字符。 $(FxCopDir)fxcop.cmd 文件的路径。fxcop.cmd 文件不和所有的 Visual C++ 版本一起安装。","categories":[],"tags":[]},{"title":"资源整理","slug":"资源整理","date":"2019-10-28T11:15:25.302Z","updated":"2019-10-29T02:31:09.453Z","comments":true,"path":"2019/10/28/资源整理/","link":"","permalink":"http://yoursite.com/2019/10/28/%E8%B5%84%E6%BA%90%E6%95%B4%E7%90%86/","excerpt":"","text":"深度学习CS231n官方笔记授权翻译总集篇发布 该课程是斯坦福大学计算机视觉实验室推出的课程。需要注意的是，目前大家说CS231n，大都指的是2016年冬季学期（一月到三月）的最新版本。 工具： Anaconda下载 Python官方文档 Python Numpy教程(支持Python2.7)对于没有Python经验的同学，这篇教程可以帮助你们快速了解Python编程环境和如何使用Python作为科学计算工具。","categories":[],"tags":[]},{"title":"知识图谱","slug":"知识图谱","date":"2019-10-28T06:54:26.822Z","updated":"2019-10-29T03:49:20.688Z","comments":true,"path":"2019/10/28/知识图谱/","link":"","permalink":"http://yoursite.com/2019/10/28/%E7%9F%A5%E8%AF%86%E5%9B%BE%E8%B0%B1/","excerpt":"Windows 内核 windows hook技术 detour hook (库) inline hook mhook(库) ssdt hook(驱动)","text":"Windows 内核 windows hook技术 detour hook (库) inline hook mhook(库) ssdt hook(驱动) 深度学习 Python","categories":[],"tags":[]},{"title":"调试工具","slug":"调试工具","date":"2019-10-28T06:27:52.451Z","updated":"2019-10-28T07:24:27.797Z","comments":true,"path":"2019/10/28/调试工具/","link":"","permalink":"http://yoursite.com/2019/10/28/%E8%B0%83%E8%AF%95%E5%B7%A5%E5%85%B7/","excerpt":"","text":"API Monitor官网：http://www.rohitab.com/apimonitor简介：对某个dll在某个软件中调用的函数追踪 Dependency Walker官网：http://www.dependencywalker.com/简介：对dll的函数进行分析","categories":[],"tags":[]},{"title":"Github开源项目","slug":"Github开源项目","date":"2019-10-28T02:05:10.914Z","updated":"2019-10-28T02:07:56.427Z","comments":true,"path":"2019/10/28/Github开源项目/","link":"","permalink":"http://yoursite.com/2019/10/28/Github%E5%BC%80%E6%BA%90%E9%A1%B9%E7%9B%AE/","excerpt":"","text":"auto.js 开源项目 地址：https://github.com/hyb1996/Auto.js简介:一个支持无障碍服务的Android平台上的JavaScript IDE，其发展目标是JsBox和Workflow。同时有VS Code 插件可提供基础的在桌面开发的功能。","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2019-10-24T09:23:32.631Z","updated":"2019-10-29T02:49:16.728Z","comments":true,"path":"2019/10/24/hello-world/","link":"","permalink":"http://yoursite.com/2019/10/24/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]},{"title":"Hexo 入门完全教程","slug":"hexo教程","date":"2019-10-24T06:39:16.000Z","updated":"2019-10-29T03:37:22.087Z","comments":true,"path":"2019/10/24/hexo教程/","link":"","permalink":"http://yoursite.com/2019/10/24/hexo%E6%95%99%E7%A8%8B/","excerpt":"","text":"官方资料 next配置文档 git安装配置 流程：配置github信息 -&gt; 生成rsa文件 -&gt; 添加SSH 配置用户信息 $ git config --global user.name &quot;yjmm10 $ git config --global user.email yjmm10@yeah.net 注:yjmm10@yeah.net 不加引号 查看用户名和密码 git config user.name git config user.email 生成rsa文件 查看rsa文件 cd ~/.ssh ls注：存在则跳过该步骤 创建rsa文件 $ ssh-keygen -t rsa -C yjmm10@yeah.net 得到id_rsa和id_rsa.pub 两个文件 复制ssh 5.将ssh添加到github上面","categories":[{"name":"工具","slug":"工具","permalink":"http://yoursite.com/categories/%E5%B7%A5%E5%85%B7/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://yoursite.com/tags/hexo/"},{"name":"git","slug":"git","permalink":"http://yoursite.com/tags/git/"},{"name":"教程","slug":"教程","permalink":"http://yoursite.com/tags/%E6%95%99%E7%A8%8B/"}]}]}